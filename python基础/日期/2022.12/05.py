"""
05 - 位运算

Date: 2022/12/7

"""

# 二进制  0  1

'''
1      1     1     1   二进制的计算方法
2**3  2**2  2**1 2**0
 8      4     2    1
等于   8+4+2+1=15



'''

a = 3
print(bin(a))  # 得出的结果是0b11    这里这个bin是转二进制的函数


a = 13
print(bin(a))

b = 0b10111   # 二进制   二进制的表示: 0b1000101   只需要前面加'0b'就可以了

print(int(b))  # 二进制转十进制是加  int

c = -8  # -0b1000     0000 1000

print(bin(c))

c = 0o6430  # 0o  开头的都是八进制    里面的数字不能超过8

print(int(c))

# 开头表示0x

d = 0x9ab16

print(d)

'''
&   与  类似 and   or

|    或者
   
!     严格意义上用~号   非   取反   

^    异或  两个数相同的是0 不同的是1 

print (3^5)
1. 左边的数字转成二进制
2.左侧的数字转成二进制
3.对齐.上下进行比较(相同的是0,不同的是1)
4.将计算的结果转成十进制

3   0000 0011
5   0000 0101 
-----------------
6    0000 0110   


<<   左移
>>   右移 
print (8<<3)   #64
左移:m<<n   m*2的n次方

print (2>>1)   #1
左移:m>>n   m//2的n次方






'''
print(3 & 2)

'''

'''

'''